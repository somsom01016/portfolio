#container {
  position: relative;
  width: 100vw;
  height: 100vh;
}

.posNum {
  position: fixed;
  left: 50%;
  top: 50%;
  width: 300px;
  height: 50px;
  margin: -25px 0 0 -150px;
  background: rgba(0,0,0,0.6);
  color: #fff;
  font-size: 20px;
  font-weight: bold;
  text-align: center;
  line-height: 50px;
  z-index: 9999;
}

body {
    font-family: 'Gmarket Sans', 'sans-serif';
    background-color: #f8d45b;
    line-height: 0;
}
footer, #wrap > * {width: 100vw;}
article {width: inherit;}
#wrap article {
    position: relative;
    overflow: visible;
    margin-left: 50%;
    transform: translateX(-50%);
}

[class^="inner"] {
    position: relative;
    overflow: visible;
    width: inherit;
}

[class*="_area"] {
    position: relative;
    display: inline-block;
    overflow: visible;
    width: inherit;
}

[class^="inner"].set {
    width: 100vw;
    max-width: 1920px;
    min-width: 1920px;
}

.set {
    margin-left: 50%;
    transform: translateX(-50%);
}


strong {display: block;}
h2, h3, h4, h5, h6, dt, dd, p, strong {white-space : pre-line;}

h2::first-line,
h3::first-line,
h4::first-line,
h5::first-line,
h6::first-line,
dt::first-line,
dd::first-line,
p::first-line,
strong::first-line {line-height: 0;}

h2 > img:first-child,
h3 > img:first-child,
h4 > img:first-child,
h5 > img:first-child,
h6 > img:first-child,
dt > img:first-child,
dd > img:first-child,
p > img:first-child,
strong > img:first-child {line-height: 0;}





h2 img,
h3 img,
h4 img,
h5 img,
h6 img,
dt img,
dd img,
p img,
strong img
{vertical-align: bottom;}

dd, p {font-size: 18px; line-height: 1.6;}



button {position: relative; transition: 0.5s;}
button img.hover {opacity: 0;}
button img.hover {position: absolute; left: 0; top: 0;}
button:hover img {opacity: 0; transition: 0.5s;}
button:hover img.hover {opacity: 1;}
/* button:hover img {animation-play-state: paused;} */
button[class^="btn_"]::after {
    content: '';
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    transition: 0.5s;
}

.bg {position: relative;}
.bg > * {position: relative; z-index: 10;}
.bg::after {
    content: '';
    display: block;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    top: 0;
    width: 100%;
    height: inherit;
    background-repeat: no-repeat;
    background-position: center top;
    z-index: 1;
}


.noise_bg {
    max-width: 100% !important;
    min-width: 100% !important;
    height: inherit;
}
.noise_bg::before,
.noise_bg::after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: inherit;
    height: inherit;
    background-color: #2b2a29;
    z-index: -1;
}

.noise_bg {position: relative; width: 100vw;}
.noise_bg::before {opacity: 1;}
.noise_bg::after {
    background-blend-mode: overlay;
    background: url(../images/common/noise.gif) repeat center top;
    opacity: 0.025;
}

.full_screen {
    width: 100vw;
    height: 100vh;
    min-height: 1080px;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}




button[class^="btn_"].set::after {
    content: '';
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    transition: 0.5s;
}





.mockup_area.mask {z-index: 100;}
.mockup_area.mask .mockup ,
.mockup_area.mask .fst > *,
.mockup_area.mask .fst,
.mockup_area.mask .lst {position: absolute;}

.mockup_area.mask .fst {z-index: 300;}
.mockup_area.mask .mockup {z-index: 200;}
.mockup_area.mask .lst {z-index: 100;}

.mockup_area.mask .fst .soft-light img {mix-blend-mode: soft-light; opacity: 0.2;}
.mockup_area.mask .fst .multiply   img {mix-blend-mode: multiply; opacity: 0.2;}





.bg {position: relative;}
.bg > * {position: relative; z-index: 10;}
.bg::after {
    content: '';
    display: block;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    top: 0;
    width: 100%;
    height: inherit;
    background-repeat: no-repeat;
    background-position: center top;
    z-index: 1;
}



[class^="inner"].noise_bg {
    max-width: 100% !important;
    min-width: 100% !important;
}

.noise_bg::before,
.noise_bg::after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: inherit;
    height: inherit;
    z-index: -1;
}

.noise_bg {position: relative; width: 100vw;}
.noise_bg::after {
    background-blend-mode :multiply;
    background: url(../images/common/noise.gif) repeat center top;
}






